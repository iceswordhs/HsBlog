<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hs.hsblog_backend.repository.VisitorMapper">

    <resultMap id="VisitorBaseResultMap" type="com.hs.hsblog_backend.entity.Visitor">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="uuid" column="uuid" jdbcType="VARCHAR"/>
            <result property="ip" column="ip" jdbcType="VARCHAR"/>
            <result property="ipSource" column="ip_source" jdbcType="VARCHAR"/>
            <result property="os" column="os" jdbcType="VARCHAR"/>
            <result property="browser" column="browser" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="lastTime" column="last_time" jdbcType="TIMESTAMP"/>
            <result property="pv" column="pv" jdbcType="INTEGER"/>
            <result property="userAgent" column="user_agent" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,uuid,ip,
        ip_source,os,browser,
        create_time,last_time,pv,
        user_agent
    </sql>

    <!--查询访客-->
    <select id="getVisitorListByDate" resultMap="VisitorBaseResultMap">
        select id, uuid, ip, ip_source, os, browser, create_time, last_time, pv
        from visitor
        <where>
            <if test="startDate!=null and startDate!='' and endDate!=null and endDate!=''">
                last_time between #{startDate} and #{endDate}
            </if>
        </where>
    </select>

    <!--查询昨天的所有新增访客的ip来源-->
    <select id="getNewVisitorIpSourceByYesterday" resultType="java.lang.String">
        select ip_source from visitor where date(create_time)=date_sub(curdate(), interval 1 day)
    </select>

    <!--查询是否存在某个uuid-->
    <select id="hasUUID" resultType="java.lang.Integer">
        select ifnull((select 1 from visitor where uuid=#{uuid} limit 1), 0)
    </select>

    <!--添加访客-->
    <insert id="saveVisitor" parameterType="com.hs.hsblog_backend.entity.Visitor" useGeneratedKeys="true" keyProperty="id">
        insert into visitor (uuid, ip, ip_source, os, browser, create_time, last_time, pv, user_agent)
        values (#{uuid}, #{ip}, #{ipSource}, #{os}, #{browser}, #{createTime}, #{lastTime}, #{pv}, #{userAgent})
    </insert>

    <!--更新访客pv和最后访问时间-->
    <update id="updatePVAndLastTimeByUUID">
        update visitor set pv=pv+#{pv}, last_time=#{time} where uuid=#{uuid}
    </update>

    <!--删除访客-->
    <delete id="deleteVisitorById">
        delete from visitor where id=#{id}
    </delete>
</mapper>
